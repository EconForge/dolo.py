name: RBC

model_type: dtmscc

symbols:
   markov_states: [z]
   states:  [k]
   controls: [i, n]
   rewards: [u]
   parameters: [beta, sigma, eta, chi, delta, alpha, rho, zbar, sig_z, kmax]

definitions:
    c: exp(z)*k^alpha*n^(1-alpha) - i
    rk: alpha*exp(z)*(n/k)^(1-alpha)
    w: (1-alpha)*exp(z)*(k/n)^(alpha)

equations:

   transition:
      - k = (1-delta)*k(-1) + i(-1)

   arbitrage:
      - 1 - beta*(c/c(1))^(sigma)*(1-delta+rk(1))     | 0.0 <= i <= inf
      - chi*n^eta*c^sigma - w                         | 0.0001 <= n <= inf

   felicity:
       - u =  c^(1-sigma)/(1-sigma) - chi*n^(1+eta)/(1+eta)

calibration:

    #parameters:

    beta : 0.99
    phi: 1
    chi : w/c^sigma/n^eta
    delta : 0.025
    alpha : 0.33
    rho : 0.8
    sigma: 2.0
    eta: 1.0
    zbar: 1.0
    sig_z: 0.001**2
    kmax: 2.0

    # constant initial values:
    z: zbar
    rk: 1/beta-1+delta
    w: (1-alpha)*z*(k/n)^(alpha)
    n: 0.33
    k: n/(rk/alpha)^(1/(1-alpha))
    i: delta*k
    c: z*k^alpha*n^(1-alpha) - i
    u: c^(1-sigma)/(1-sigma)  - chi*n^(1+eta)/(1+eta)

options:

    discrete_transition: !AR1
       rho: 0.9
       sigma: [ [sig_z] ]
       N: 5

    grid: !Cartesian

        a: [5.0]
        b: [30.0]
        orders: [20]
        mu: 3
